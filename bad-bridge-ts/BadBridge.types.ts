/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.26.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  connection_id: string;
  contract_addr: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  register_i_c_a: {
    [k: string]: unknown;
  };
} | {
  mint_nft: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  register_transfer_nft_query: {
    min_height: number;
    sender: string;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  remove_interchain_query: {
    query_id: number;
    [k: string]: unknown;
  };
} | {
  unlock_nft: {
    destination: string;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  update_config: {
    nft_contract_address?: string | null;
    update_period?: number | null;
    [k: string]: unknown;
  };
};
export type QueryMsg = {
  ica_account: {
    [k: string]: unknown;
  };
} | {
  token_denom: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  nft_transfers: {
    sender: string;
    [k: string]: unknown;
  };
} | {
  get_registered_query: {
    query_id: number;
    [k: string]: unknown;
  };
} | {
  get_query_id: {
    token_id: string;
    [k: string]: unknown;
  };
};
export type Uint64 = number;
export type Uint128 = string;
export type Binary = string;
export type QueryType = "kv" | "tx";
export interface QueryRegisteredQueryResponse {
  registered_query: RegisteredQuery;
  [k: string]: unknown;
}
export interface RegisteredQuery {
  connection_id: string;
  deposit?: Coin[];
  id: number;
  keys: KVKey[];
  last_submitted_result_local_height?: number;
  last_submitted_result_remote_height?: Height;
  owner: string;
  query_type: QueryType;
  registered_at_height?: number;
  submit_timeout?: number;
  transactions_filter: string;
  update_period: number;
  [k: string]: unknown;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface KVKey {
  key: Binary;
  path: string;
  [k: string]: unknown;
}
export interface Height {
  revision_height?: number;
  revision_number?: number;
  [k: string]: unknown;
}
export type String = string;
export interface NftTransfersResponse {
  transfers: NftTransfer[];
  [k: string]: unknown;
}
export interface NftTransfer {
  contract_address: string;
  sender: string;
  token_id: string;
  [k: string]: unknown;
}